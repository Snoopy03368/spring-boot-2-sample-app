version: '1.0'
mode: parallel
stages:
  - prepare
  - build
  - validate
  - deploy
  - terminate
steps:
  main_clone:
    title: Cloning main repository...
    stage: prepare
    type: git-clone
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: master
    git: github
  ToolsDockerImage:    # TODO:  would move this too another pipeline
    title: Building Docker Image for AWS Cli, jq, yq, etc.
    type: build
    stage: prepare
    image_name: tools
    working_directory: ./
    tag: 'non-multi-stage'
    dockerfile: Dockerfile-aws
    when:
      steps:
        - name: main_clone
          on:
            - success
  CreateAWSCredentialsFile:
    stage: prepare
    image: alpine
    title: Creating AWS Credentials File...
    working_directory: ${{main_clone}}
    commands:
      - mkdir -p ${CF_VOLUME_PATH}/.aws
      - 'echo -n $AWS_CREDENTIALS_FILE | base64 -d > ${CF_VOLUME_PATH}/.aws/credentials'
      - wc -l ${CF_VOLUME_PATH}/.aws/credentials
      - cf_export AWS_SHARED_CREDENTIALS_FILE=${CF_VOLUME_PATH}/.aws/credentials
    when:
      steps:
        - name: main_clone
          on:
            - success
  publish_blueprint:
    title: Publish the blueprint for checking
    stage: prepare
    image:  "${{ToolsDockerImage}}"
    when:
      steps:
        - name: ToolsDockerImage
          on:
            - success
        - name: CreateAWSCredentialsFile
          on:
            - success
    commands:
    - cat blueprint.yml
    - BLUEPRINT_NAME=`yq -r '.|.name' blueprint.yml`
    - BLUEPRINT_VERSION_BUCKET_PATH=${BLUEPRINT_VERSION_BUCKET}/$BLUEPRINT_NAME/${{CF_BUILD_ID}}
    - ./put-blueprint-version-to-s3.sh $BLUEPRINT_NAME "${{CF_BUILD_ID}}" "${{CF_COMMIT_URL}}" "${{CF_REVISION}}" "${{CF_COMMIT_AUTHOR}}" $BLUEPRINT_VERSION_BUCKET_PATH
    - aws s3 presign s3://${BLUEPRINT_VERSION_BUCKET_PATH} >blueprint-version-url
    - cat blueprint-version-url |xargs curl -s
  build_check_maven-build:
    title: Check the blueprint for the 'maven-build' build
    stage: prepare
    image:  "${{ToolsDockerImage}}"
    when:
      steps:
        - name: publish_blueprint
          on:
            - success
    commands:
      - echo "If this was real it would do check of the build."
  validate_check:
    title: Check the blueprint for 'validate' section
    stage: prepare
    image:  "${{ToolsDockerImage}}"
    when:
      steps:
        - name: publish_blueprint
          on:
            - success
    commands:
      - echo "If this was real it would do check of the validate."
  deliver_check:
    title: Check the blueprint for 'deliver' section
    stage: prepare
    image:  "${{ToolsDockerImage}}"
    when:
      steps:
        - name: publish_blueprint
          on:
            - success
    commands:
      - echo "If this was real it would do check of the deliver."
  deploy_check_dev:
    title: Check the blueprint the 'dev' system
    stage: prepare
    image:  "${{ToolsDockerImage}}"
    when:
      steps:
        - name: publish_blueprint
          on:
            - success
    commands:
    #                       sessionid    phase    build#             triggerRev          triggerUrl        buildSnap  blueprint                    system  TODO make loop for each system?       BP Version URL
    - ./sysps-job-start.sh $FSSESSIONID "check" "${{CF_BUILD_ID}}" "${{CF_REVISION}}" "${{CF_COMMIT_URL}}" "null" `yq -r '.|.name' blueprint.yml` `yq -r '.|.deploy|keys|.[0]' blueprint.yml` `cat blueprint-version-url`
  build_maven-build:
    title: Compile/Unit test
    stage: build
    image: 'maven:3.5.2-jdk-8-alpine'
    when:
      steps:
        - name: build_check_maven-build
          on:
            - success
    commands:
      - mvn -Dmaven.repo.local=/codefresh/volume/m2_repository package
  deploy_dev-app-validation:
    title: Deploy 'dev' system
    stage: validate
    image:  "${{ToolsDockerImage}}"
    when:
      steps:
        - name: build_maven-build
          on:
            - success
        - name: deploy_check_dev
          on:
            - success
    commands:
    - BLUEPRINT_NAME=`yq -r '.|.name' blueprint.yml`
    - SYSTEM_NAME=`yq -r '.|.deploy|keys|.[0]' blueprint.yml`
    - SERVICE_ARTIFACTS_JSON_FILE=$BLUEPRINT_NAME-$SYSTEM_NAME-service-artifacts-url.json
    - BUILD_NUMBER=${{CF_BUILD_ID}}
    - TRIGGER_REV=${{CF_REVISION}}
    - TRIGGER_URL=${{CF_COMMIT_URL}}
    - BLUEPRINT_VERSION_URL=`cat blueprint-version-url`
    - ./put-services-zip-to-s3.sh $BLUEPRINT_NAME $SYSTEM_NAME check-$SYSTEM_NAME-report $BLUEPRINT_VERSION_BUCKET $BUILD_NUMBER $SERVICE_ARTIFACTS_JSON_FILE
    - SERVICE_ARTIFACTS_JSON=`jq '.|tostring' $BLUEPRINT_NAME-$SYSTEM_NAME-service-artifacts-url.json`
    #                       sessionid    phase    build#             triggerRev  triggerUrl        buildSnap blueprint       system        BP Version URL             ServiceArtifactUrls json
    - ./sysps-job-start.sh $FSSESSIONID "deploy" "$BUILD_NUMBER" "$TRIGGER_REV" "$TRIGGER_URL" "null"  $BLUEPRINT_NAME $SYSTEM_NAME $BLUEPRINT_VERSION_URL $SERVICE_ARTIFACTS_JSON
  validate_dev-app-validation:
    title: Execute the Acceptance Tests on 'dev' (fake)
    stage: validate
    image:  "${{ToolsDockerImage}}"
    when:
      steps:
        - name: deploy_dev-app-validation
          on:
            - success
    fail_fast: false # don't let this fail the pipeline, but let integrate do some work after the fact.
    commands:
      - echo "If this was real it would do mvn verify."
  integrate_success-dev-app-validations:
    title: On Acceptance Success Integrate the 'dev' system (fake)
    stage: validate
    image:  "${{ToolsDockerImage}}"
    when:
      steps:
        - name: validate_dev-app-validation
          on:
            - success
    commands:
      - echo "If this was real it would do call SysPS to integrate with the validation success."
      - SYSTEM_NAME=`yq -r '.|.deploy|keys|.[0]' blueprint.yml`
      - cat deploy-$SYSTEM_NAME-report
  integrate_failure-dev-app-validations:
    title: On Acceptance Failure Integrate the 'dev' system (fake)
    stage: validate
    image:  "${{ToolsDockerImage}}"
    when:
      steps:
        - name: validate_dev-app-validation
          on:
            - failure
    commands:
      - echo "If this was real it would do call SysPS to integrate with the validation failure."
      - SYSTEM_NAME=`yq -r '.|.deploy|keys|.[0]' blueprint.yml`
      - cat deploy-$SYSTEM_NAME-report
